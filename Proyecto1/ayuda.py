#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.4
#  in conjunction with Tcl version 8.6
#    Aug 16, 2020 10:42:15 PM CST  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import ayuda_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel2 (root)
    ayuda_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel2(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel2(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = Toplevel2 (w)
    ayuda_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel2():
    global w
    w.destroy()
    w = None

class Toplevel2:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("600x450+633+210")
        top.minsize(1, 1)
        top.maxsize(3825, 1050)
        top.resizable(1, 1)
        top.title("Ayuda")
        top.configure(background="#556B2F")
        top.configure(highlightcolor="black")

        self.Button1 = tk.Button(top)
        self.Button1.place(relx=0.1, rely=0.111, height=31, width=98)
        self.Button1.configure(activebackground="#f9f9f9")
        self.Button1.configure(text='''+2 / +4''')

        self.Button2 = tk.Button(top)
        self.Button2.place(relx=0.1, rely=0.267, height=31, width=98)
        self.Button2.configure(activebackground="#f9f9f9")
        self.Button2.configure(text='''r (reversa)''')

        self.Button4 = tk.Button(top)
        self.Button4.place(relx=0.1, rely=0.4, height=31, width=98)
        self.Button4.configure(activebackground="#f9f9f9")
        self.Button4.configure(text='''s (saltar)''')

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.083, rely=0.711, height=101, width=500)
        self.Label1.configure(activebackground="#556B2F")
        self.Label1.configure(activeforeground="white")
        self.Label1.configure(activeforeground="#556B2F")
        self.Label1.configure(anchor='nw')
        self.Label1.configure(background="#556B2F")
        self.Label1.configure(disabledforeground="#556B2F")
        self.Label1.configure(foreground="#ffffff")
        self.Label1.configure(highlightbackground="#ffffff")
        self.Label1.configure(highlightcolor="#ffffff")
        self.Label1.configure(text='''Para poder lanzar una carta esta debe coincidir en color o valor de la ultima carta jugada. Si no hay cartas en el mazo el jugador que sume la menor cantidad de cartas ganar√°. Solo se puede continuar +2 con otros +2. Un jugador puede jalar las cartas que desee hasta pasar turno.''')
        self.Label1.configure(wraplength="500")

        self.Label2 = tk.Label(top)
        self.Label2.place(relx=0.285, rely=0.073, height=71, width=399)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(background="#556B2F")
        self.Label2.configure(foreground="#ffffff")
        self.Label2.configure(text='''El siguiente jugador agarra la cantidad de cartas consecuitvas que se mandaron anteriormente o agregar una carta para el siguiente jugador. El jugador que agarrra el total pierde el turno.''')
        self.Label2.configure(wraplength="400")

        self.Label2_5 = tk.Label(top)
        self.Label2_5.place(relx=0.3, rely=0.422, height=21, width=319)
        self.Label2_5.configure(activebackground="#f9f9f9")
        self.Label2_5.configure(background="#556B2F")
        self.Label2_5.configure(foreground="#ffffff")
        self.Label2_5.configure(text='''El siguiente jugador pierde un turno''')

        self.Label2_6 = tk.Label(top)
        self.Label2_6.place(relx=0.3, rely=0.289, height=21, width=319)
        self.Label2_6.configure(activebackground="#f9f9f9")
        self.Label2_6.configure(background="#556B2F")
        self.Label2_6.configure(foreground="#ffffff")
        self.Label2_6.configure(text='''invierte el nombre en que se juegan las cartas''')

        self.Label2_7 = tk.Label(top)
        self.Label2_7.place(relx=0.3, rely=0.556, height=21, width=319)
        self.Label2_7.configure(activebackground="#f9f9f9")
        self.Label2_7.configure(background="#556B2F")
        self.Label2_7.configure(foreground="#ffffff")
        self.Label2_7.configure(text='''Cambia el color que se puede jugar.''')

        self.Button4_8 = tk.Button(top)
        self.Button4_8.place(relx=0.1, rely=0.533, height=31, width=98)
        self.Button4_8.configure(activebackground="#f9f9f9")
        self.Button4_8.configure(text='''w (wild)''')

if __name__ == '__main__':
    vp_start_gui()





